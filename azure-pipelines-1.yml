# .NET Desktop

# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

# trigger:
# - Vsupgrade2

pool:
  vmImage: 'windows-latest'
  # name: OData
  # demands:
  #   - Agent.Name -equals ODataBuild26
  

variables:
#   solution: 'sln\OData.Net45.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  skipComponentGovernanceDetection: true
  snExe: 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\sn.exe'
  snExe64: 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\sn.exe'
  ProductBinPath1: '$(Build.SourcesDirectory)\src\Microsoft.OData.Edm\bin\$(BuildConfiguration)\net45'
  mainDll1: 'Microsoft.OData.Edm.dll'
  ProductBinPath2: '$(Build.SourcesDirectory)\src\Microsoft.OData.Core\bin\$(BuildConfiguration)\net45'
  mainDll2: 'Microsoft.OData.Core.dll'
  ProductBinPath3: '$(Build.SourcesDirectory)\src\Microsoft.Spatial\bin\$(BuildConfiguration)\net45'
  mainDll3: 'Microsoft.Spatial.dll'
  ProductBinPath4: '$(Build.SourcesDirectory)\src\Microsoft.OData.Client\bin\$(BuildConfiguration)\net45'
  mainDll4: 'Microsoft.OData.Client.dll'

steps:

- script: |
   echo Write your commands here   
   echo Hello world
   echo $(Build.SourcesDirectory)
   dotnet.exe --info
  displayName: 'Command Line Script'

- task: UseDotNet@2
  inputs:
    version: '1.0.4'
- task: UseDotNet@2
  inputs:
    version: '2.1.3'


- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '>=5.2.0'

# because the assemblies are delay-signed, we need to disable
# strong name validation so that the tests may run,
# otherwise our assemblies will fail to load


- task: DotNetCoreCLI@2
  displayName: 'Build Product 1'  
  inputs:
    command: 'build'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |
     $(Build.SourcesDirectory)\test\EndToEndTests\Tests\Client\Build.Desktop\Microsoft.Test.OData.Tests.Client.csproj
  enabled: true

- task: Powershell@2
  displayName: 'Skip strong name validation'
  inputs:
    targetType: 'inline'
    script: |
      & "$(snExe)" /Vr $(ProductBinPath4)\$(mainDll4)
      & "$(snExe64)" /Vr $(ProductBinPath4)\$(mainDll4)
      & "$(snExe)" /Vr $(ProductBinPath1)\$(mainDll1)
      & "$(snExe64)" /Vr $(ProductBinPath1)\$(mainDll1)
      & "$(snExe)" /Vr $(ProductBinPath2)\$(mainDll2)
      & "$(snExe64)" /Vr $(ProductBinPath2)\$(mainDll2)
      & "$(snExe)" /Vr $(ProductBinPath3)\$(mainDll3)
      & "$(snExe64)" /Vr $(ProductBinPath3)\$(mainDll3)
      
  enabled: true

# "$(snExe)" /Vr $(testBinPath)\$(testDll)
      # "$(snExe64)" /Vr $(testBinPath)\$(testDll)

# - task: DotNetCoreInstaller@1
#   inputs:
#     version: '1.0.4'

# $(TestBinPath)\Microsoft.Test.Data.Services.DDBasics.dll;
# $(TestBinPath)\Microsoft.OData.Client.Design.T4.UnitTests.dll;
# $(TestBinPath)\EdmLibTests.dll;
# $(TestBinPath)\Microsoft.OData.Client.TDDUnitTests.dll;
# $(TestBinPath)\Microsoft.Test.Taupo.OData.Common.Tests.dll;
# $(TestBinPath)\Microsoft.Test.Taupo.OData.Query.Tests.dll;
# $(TestBinPath)\Microsoft.Test.Taupo.OData.Reader.Tests.dll;
# $(TestBinPath)\Microsoft.Test.Taupo.OData.Writer.Tests.dll;
# $(TestBinPath)\Microsoft.Test.Taupo.OData.Scenario.Tests.dll;
# $(TestBinPath)\Microsoft.Data.NamedStream.UnitTests.dll; 
# $(TestBinPath)\Microsoft.Test.OData.PluggableFormat.Tests.dll;
# $(TestBinPath)\Microsoft.Data.ServerUnitTests1.UnitTests.dll;
# $(TestBinPath)\Microsoft.Data.ServerUnitTests2.UnitTests.dll;
# $(TestBinPath)\RegressionUnitTests.dll;
# $(TestBinPath)\Microsoft.Data.MetadataObjectModel.UnitTests.dll;
# $(TestBinPath)\AstoriaUnitTests.TDDUnitTests.dll;
# $(TestBinPath)\AstoriaUnitTests.ClientCSharp.dll;
# $(TestBinPath)\AstoriaUnitTests.dll;
# $(TestBinPath)\AstoriaClientUnitTests.dll


- task: DotNetCoreCLI@2
  displayName: 'Test Test 1'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataServices\ddbasics\Microsoft.Test.Data.Services.DDBasics.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataServices\UnitTests\TDDUnitTests\Microsoft.OData.Service.TDDUnitTests.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataEdmLib\EdmLibTests.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataServices\UnitTests\DesignT4UnitTests\Microsoft.OData.Service.Design.T4.UnitTests.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataOData\Tests\OData.Common.Tests\Microsoft.Test.Taupo.OData.Common.Tests.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataOData\Tests\OData.Query.Tests\Microsoft.Test.Taupo.OData.Query.Tests.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataOData\Tests\OData.Reader.Tests\Microsoft.Test.Taupo.OData.Reader.Tests.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataOData\Tests\OData.Writer.Tests\Microsoft.Test.Taupo.OData.Writer.Tests.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataOData\Tests\OData.Scenario.Tests\Microsoft.Test.Taupo.OData.Scenario.Tests.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataServices\UnitTests\NamedStreamTests\Microsoft.Data.NamedStream.UnitTests.csproj

- task: DotNetCoreCLI@2
  displayName: 'Test Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration) --no-build'
    projects: |      
     $(Build.SourcesDirectory)\test\EndToEndTests\Tests\Client\Build.Desktop\Microsoft.Test.OData.Tests.Client.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Microsoft.Test.OData.PluggableFormat.csproj

- task: VSTest@2
  displayName: 'Test'
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '$(Build.SourcesDirectory)\bin\AnyCPU\$(BuildConfiguration)\Test\Desktop\Microsoft.Test.OData.Tests.Client.dll' #'$(Build.SourcesDirectory)\test\EndToEndTests\Tests\Client\Build.Desktop\Microsoft.Test.OData.Tests.Client.csproj'
    searchFolder: '$(System.DefaultWorkingDirectory)'

#$(Build.SourcesDirectory)\bin\AnyCPU\$(BuildConfiguration)\Test\Desktop\

- task: DotNetCoreCLI@2
  displayName: 'EDM Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Edm.Tests\Microsoft.OData.Edm.Tests.csproj
     


- task: DotNetCoreCLI@2
  displayName: 'Test Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     $(Build.SourcesDirectory)\test\EndToEndTests\Tests\Client\Build.Desktop\Microsoft.Test.OData.Tests.Client.csproj
     #$(Build.SourcesDirectory)\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Microsoft.Test.OData.PluggableFormat.csproj


- task: DotNetCoreCLI@2
  displayName: 'Core Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Core.Tests\Microsoft.OData.Core.Tests.csproj



- task: DotNetCoreCLI@2
  displayName: 'Build test'  
  inputs:
    command: 'build'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |
     $(Build.SourcesDirectory)\test\EndToEndTests\Tests\Client\Build.Desktop\Microsoft.Test.OData.Tests.Client.csproj


- task: DotNetCoreCLI@2
  displayName: 'Build Product'  
  inputs:
    command: 'build'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |
     $(Build.SourcesDirectory)\src\Microsoft.Spatial\Microsoft.Spatial.csproj
     $(Build.SourcesDirectory)\src\Microsoft.OData.Edm\Microsoft.OData.Edm.csproj
     $(Build.SourcesDirectory)\src\Microsoft.OData.Core\Microsoft.OData.Core.csproj
     $(Build.SourcesDirectory)\src\Microsoft.OData.Client\Microsoft.OData.Client.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.TestCommon\Microsoft.OData.TestCommon.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.Spatial.Tests\Microsoft.Spatial.Tests.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Edm.Tests\Microsoft.OData.Edm.Tests.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Core.Tests\Microsoft.OData.Core.Tests.csproj
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Client.Tests\Microsoft.OData.Client.Tests.csproj




- task: DotNetCoreCLI@2
  displayName: 'Spatial Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration)'
    projects: |      
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.Spatial.Tests\Microsoft.Spatial.Tests.csproj


- task: DotNetCoreCLI@2
  displayName: 'Client Test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration) --framework netcoreapp2.0'
    projects: |      
     $(Build.SourcesDirectory)\test\FunctionalTests\Microsoft.OData.Client.Tests\Microsoft.OData.Client.Tests.csproj


    #test\FunctionalTests\Microsoft.Spatial.Tests\Microsoft.Spatial.Tests.csproj
    #arguments: --no-build
    #Your build pipeline references an undefined variable named ‘ProductBinPath’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972




- task: EsrpCodeSigning@1

  displayName: 'ESRP CodeSign - OData'
  inputs:
    ConnectedServiceName: 'ESRP CodeSigning - OData'
    #FolderPath: '$(Build.SourcesDirectory)\src\Microsoft.Spatial\bin\Debug\netstandard2.0'
    FolderPath: '$(Build.SourcesDirectory)\src'

    Pattern: 'Microsoft.Spatial.dll,Microsoft.OData.Edm.dll,Microsoft.OData.Core.dll,Microsoft.OData.Client.dll'

    signConfigType: inlineSignParams

    inlineOperation: |
     [
       {
         "keyCode": "MSSharedLibSnKey",
         "operationSetCode": "StrongNameSign",
         "parameters": null,
         "toolName": "sn.exe",
         "toolVersion": "V4.6.1586.0"
       },
       {
         "keyCode": "MSSharedLibSnKey",
         "operationSetCode": "StrongNameVerify",
         "parameters": null,
         "toolName": "sn.exe",
         "toolVersion": "V4.6.1586.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolSign",
         "parameters": [
         {
           "parameterName": "OpusName",
           "parameterValue": "TestSign"
         },
         {
           "parameterName": "OpusInfo",
           "parameterValue": "http://test"
         },
         {
           "parameterName": "PageHash",
           "parameterValue": "/NPH"
         },
         {
           "parameterName": "TimeStamp",
           "parameterValue": "/t \"http://ts4096.gtm.microsoft.com/TSS/AuthenticodeTS\""
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolSign",
         "parameters": [
         {
           "parameterName": "OpusName",
           "parameterValue": "TestSign"
         },
         {
           "parameterName": "OpusInfo",
           "parameterValue": "http://test"
         },
         {
           "parameterName": "Append",
           "parameterValue": "/AS"
         },
         {
           "parameterName": "PageHash",
           "parameterValue": "/NPH"
         },
         {
           "parameterName": "FileDigest",
           "parameterValue": "/fd sha256"
         },
         {
           "parameterName": "TimeStamp",
           "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolVerify",
         "parameters": [
         {
           "parameterName": "VerifyAll",
           "parameterValue": "/all"
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       }
     ]

    SessionTimeout: 20
    VerboseLogin: true


# - task: PowerShell@2
#   inputs:
#     filePath: 'build.ps1'
#     arguments: 'EnableSkipStrongName'
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'test'
#     projects: 'test\FunctionalTests\Microsoft.Spatial.Tests\Microsoft.Spatial.Tests.csproj'
#     arguments: '--collect "Code coverage"'


# #  - task: BatchScript@1
# #    displayName: 'Run script - EnableSkipStrongName'
# #    inputs:
#       filename: '$(Build.SourcesDirectory)\build.cmd'
#       arguments: EnableSkipStrongName
#       modifyEnvironment: false

